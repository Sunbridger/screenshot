const axios = require('axios');
const fs = require('fs');
const path = require('path');

const prefixDir = '../../data';

async function getBaiduHotSearch() {
  const url = 'https://top.baidu.com/board';
  const result = await axios.get(url, {
    headers: {
      'User-Agent':
        'Mozilla/5.0 (iPhone; CPU iPhone OS 14_2_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) FxiOS/1.0 Mobile/12F69 Safari/605.1.15',
    },
  });

  const pattern = /<!--s-data:(.*?)-->/s;
  const matchResult = result.data.match(pattern);
  const jsonObject = JSON.parse(matchResult[1]).cards[0].content;

  return jsonObject.map((v) => ({
    id: v.index,
    title: v.word,
    desc: v.desc,
    cover: v.img,
    author: v.show?.length ? v.show : '',
    timestamp: 0,
    hot: Number(v.hotScore || 0),
    url: 'https://www.baidu.com/s?wd=' + encodeURIComponent(v.query),
    mobileUrl: v.rawUrl,
  }));
}

async function saveDataToFile(data, filePath) {
  // Á°Æ‰øùÁõÆÂΩïÂ≠òÂú®
  if (!fs.existsSync(path.dirname(filePath))) {
    fs.mkdirSync(path.dirname(filePath), { recursive: true });
  }
  fs.writeFileSync(filePath, JSON.stringify(data, null, 2));
}

async function main() {
  try {
    console.log('üöÄ ÂºÄÂßãËé∑ÂèñÁôæÂ∫¶ÁÉ≠ÊêúÊï∞ÊçÆ...');
    const data = await getBaiduHotSearch();
    const today = new Date().toISOString().split('T')[0];
    const filePath = path.join(__dirname, prefixDir, `${today}.json`);

    await saveDataToFile(data, filePath);
    console.log(`‚úÖ Êï∞ÊçÆÂ∑≤‰øùÂ≠òÂà∞: ${filePath}`);
    return filePath; // ËøîÂõûÊñá‰ª∂Ë∑ØÂæÑ‰æø‰∫éÂÖ∂‰ªñÊ®°Âùó‰ΩøÁî®
  } catch (error) {
    console.error('‚ùå Ëé∑ÂèñÊï∞ÊçÆÂ§±Ë¥•:', error);
    throw error; // ÊäõÂá∫ÈîôËØØ‰ª•‰æøË∞ÉÁî®ÊñπÂ§ÑÁêÜ
  }
}

// Â¶ÇÊûúÊòØÁõ¥Êé•ÊâßË°åÔºàËÄåÈùûË¢´ requireÔºâÔºåÂàôËøêË°å‰∏ªÂáΩÊï∞
if (require.main === module) {
  main().catch((error) => {
    console.error('‚ùå Á®ãÂ∫èÊâßË°åÂ§±Ë¥•:', error);
    process.exit(1);
  });
}

module.exports = {
  main,
};
